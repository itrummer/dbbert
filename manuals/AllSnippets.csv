System,WebSite,Param1,Param2,KeySentence,Context,Formula,Condition
Postgres,https://wiki.postgresql.org/wiki/Tuning_Your_PostgreSQL_Server,shared_buffers,,"Even on a modern Linux system, the stock kernel will likely not allow setting shared_buffers to over 32MB without adjusting kernel settings first.",,P1 < 32MB,
Postgres,https://wiki.postgresql.org/wiki/Tuning_Your_PostgreSQL_Server,shared_buffers,,"If you have a system with 1GB or more of RAM, a reasonable starting value for shared_buffers is 1/4 of the memory in your system.",,P1 = 0.25 * memory,Memory >= 1GB
Postgres,https://wiki.postgresql.org/wiki/Tuning_Your_PostgreSQL_Server,shared_buffers,,If you have less RAM you'll have to account more carefully for how much RAM the OS is taking up; closer to 15% is more typical there.,"If you have a system with 1GB or more of RAM, a reasonable starting value for shared_buffers is 1/4 of the memory in your system.",P1 = 0.15 * memory,Memory < 1GB
Postgres,https://wiki.postgresql.org/wiki/Tuning_Your_PostgreSQL_Server,shared_buffers,,"There are some workloads where even larger settings for shared_buffers are effective, but given the way PostgreSQL also relies on the operating system cache, it's unlikely you'll find using more than 40% of RAM to work better than a smaller amount.",,P1 < 0.4 * memory,
Postgres,https://wiki.postgresql.org/wiki/Tuning_Your_PostgreSQL_Server,shared_buffers,,"Be aware that if your system or PostgreSQL build is 32-bit, it might not be practical to set shared_buffers above 2 ~ 2.5GB.",,P1 < 2.5GB,Bits = 32
Postgres,https://wiki.postgresql.org/wiki/Tuning_Your_PostgreSQL_Server,shared_buffers,,On Windows the useful range is 64MB to 512MB.,"Note that on Windows, large values for shared_buffers aren't as effective, and you may find better results keeping it relatively low and using the OS cache more instead.",P1 < 512MB,OS = Windows
Postgres,https://wiki.postgresql.org/wiki/Tuning_Your_PostgreSQL_Server,effective_cache_size,,"Setting effective_cache_size to 1/2 of total memory would be a normal conservative setting, and 3/4 of memory is a more aggressive but still reasonable amount.",,0.5 * memory <= P1 <= 0.75 * memory,
Postgres,https://wiki.postgresql.org/wiki/Tuning_Your_PostgreSQL_Server,checkpoint_segments,,"Unless you're running on a very small configuration, you'll almost certainly be better setting this to at least 10, which also allows usefully increasing the completion target.",Setting checkpoint_segments to a much larger value improves that.,P >= 10,
Postgres,https://wiki.postgresql.org/wiki/Tuning_Your_PostgreSQL_Server,checkpoint_segments,,"For more write-heavy systems, values from 32 (checkpoint every 512MB) to 256 (every 4GB) are popular nowadays.",Setting checkpoint_segments to a much larger value improves that.,32 <= P1 <= 256,
Postgres,https://wiki.postgresql.org/wiki/Tuning_Your_PostgreSQL_Server,checkpoint_segments,,Normally the large settings (>64/1GB) are only used for bulk loading.,Setting checkpoint_segments to a much larger value improves that.,P <= 64,Not bulkloading
Postgres,https://wiki.postgresql.org/wiki/Tuning_Your_PostgreSQL_Server,checkpoint_completion_target,,"You can spread those writes out further, lowering the average write overhead, by increasing the checkpoint_completion_target parameter to its useful maximum of 0.9 (aim to finish by the time 90% of the next checkpoint is here) rather than the default of 0.5 (aim to finish when the next one is 50% done).",,P = 0.9,
Postgres,https://wiki.postgresql.org/wiki/Tuning_Your_PostgreSQL_Server,checkpoint_completion_target,,A setting of 0 gives something similar to the behavior of obsolete versions. ,,P > 0,
Postgres,https://wiki.postgresql.org/wiki/Tuning_Your_PostgreSQL_Server,autovacuum,,"However, it's acceptable to disable autovacuum for short periods of time, for instance when bulk loading large amounts of data.",,P = off,Bulk loading
Postgres,https://wiki.postgresql.org/wiki/Tuning_Your_PostgreSQL_Server,log_statement,,Using all or mod in production would introduce overhead of the logging.,log_statement,"P != all, P != mod",
Postgres,https://wiki.postgresql.org/wiki/Tuning_Your_PostgreSQL_Server,synchronous_commit,,Turning the synchronous_commit to off would cause a more severe performance regression.,,P != off,
Postgres,https://wiki.postgresql.org/wiki/Tuning_Your_PostgreSQL_Server,default_statistics_target,,"The maximum value for the parameter was also increased from 1000 to 10,000 in 8.4.",,"P <= 10,000",
Postgres,https://wiki.postgresql.org/wiki/Tuning_Your_PostgreSQL_Server,maintenance_work_mem,,"Since only one of these operations can be executed at a time by a database session, and an installation normally doesn't have many of them running concurrently, it's safe to set this value significantly larger than work_mem.",,P > work_mem,
Postgres,https://wiki.postgresql.org/wiki/Tuning_Your_PostgreSQL_Server,wal_sync_method,,"open_sync is the most common non-default setting switched to, on platforms that support it but default to one of the fsync methods.","This can be done a couple of ways, and on some platforms other options than the shipped wal_sync_method are considerably faster than the conservative default.",P = open_sync,
Postgres,https://wiki.postgresql.org/wiki/Tuning_Your_PostgreSQL_Server,wal_buffers,,Benchmarking generally suggests that just increasing to 1MB is enough for some large systems and given the amount of RAM in modern servers allocating a full WAL segment (16MB  the useful upper-limit here) is reasonable.,"On PostgreSQL 9.0 and earlier, increasing wal_buffers from its tiny default of a small number of kilobytes is helpful for write-heavy systems.",P <= 16MB,
Postgres,https://wiki.postgresql.org/wiki/Tuning_Your_PostgreSQL_Server,max_prepared_transactions,,"If you do not use two phase commit (and if you don't know what it is, you don't use it), then you can set this value to 0. ",max_prepared_transactions,P = 0,
Postgres,https://wiki.postgresql.org/wiki/Tuning_Your_PostgreSQL_Server,synchronous_commit,,"For situations where a small amount of data loss is acceptable in return for a large boost in how many updates you can do to the database per second, consider switching synchronous commit off. ",,P = off,
Postgres,https://wiki.postgresql.org/wiki/Tuning_Your_PostgreSQL_Server,fsync,,This is dangerous--a power loss could result in your database getting corrupted and not able to start again.,"For obsolete versions of PostgreSQL, you may find people recommending that you set fsync=off to speed up writes on busy systems.",P != off,
Postgres,https://wiki.postgresql.org/wiki/Tuning_Your_PostgreSQL_Server,random_page_cost,,Some feel that 4.0 is always too large on current hardware; it's not unusual for administrators to standardize on always setting this between 2.0 and 3.0 instead. ,"If you have particularly fast disks, as commonly found with RAID arrays of SCSI disks, it may be appropriate to lower random_page_cost, which will encourage the query optimizer to use random access index scans.",2.0 <= P <= 3.0,
Postgres,https://wiki.postgresql.org/wiki/Tuning_Your_PostgreSQL_Server,random_page_cost,, it's not unusual for administrators to standardize on always setting this between 2.0 and 3.0 instead,"If you have particularly fast disks, as commonly found with RAID arrays of SCSI disks, it may be appropriate to lower random_page_cost, which will encourage the query optimizer to use random access index scans.",2.0 <= P <= 3.0,
Postgres,https://www.percona.com/blog/2018/08/31/tuning-postgresql-database-parameters-to-optimize-performance/,shared_buffers,,The recommended value is 25% of your total machine RAM. ,The default value of shared_buffer is set very low and you will not get much benefit from that. It’s low because certain machines and operating systems do not support higher values. ,P = 0.25 * memory,
Postgres,https://www.percona.com/blog/2018/08/31/tuning-postgresql-database-parameters-to-optimize-performance/,shared_buffers,,"That said, you obviously do not want to reserve all RAM for PostgreSQL.",The default value of shared_buffer is set very low and you will not get much benefit from that. It’s low because certain machines and operating systems do not support higher values. ,P < memory,
Postgres,https://www.percona.com/blog/2018/08/31/tuning-postgresql-database-parameters-to-optimize-performance/,work_mem,,"For testing purposes, let’s increase this to 256MB and see if there is any impact on cost.","For the above query, we have a work_mem of only 2MB. ",P = 256MB,
Postgres,https://www.percona.com/blog/2018/08/31/tuning-postgresql-database-parameters-to-optimize-performance/,maintenance_work_mem,,"The index creation time is 170091.371ms when maintenance_work_mem is set to only 10MB, but that is reduced to 111274.903 ms when we increase maintenance_work_mem setting to 256MB.",,P = 256MB,
Postgres,https://www.percona.com/blog/2018/08/31/tuning-postgresql-database-parameters-to-optimize-performance/,synchronous_commit,,"If your application is designed such that performance is more important than the reliability, then turn off synchronous_commit.",,P = off,
Postgres,https://www.enterprisedb.com/postgres-tutorials/how-tune-postgresql-memory,shared_buffers,,The value should be set to 15% to 25% of the machine’s total RAM,#shared_buffers = 128MB,0.15 * memory <= P <= 0.25 * memory,
Postgres,https://www.enterprisedb.com/postgres-tutorials/how-tune-postgresql-memory,shared_buffers,,"For example: if your machine’s RAM size is 32 GB, then the recommended value for shared_buffers is 8 GB.",#shared_buffers = 128MB,P = 8GB,Memory = 32GB
Postgres,https://www.enterprisedb.com/postgres-tutorials/how-tune-postgresql-memory,work_mem,,Total RAM * 0.25 / max_connections,We can use the formula below to calculate the optimal work_mem value for the database server:,P = 0.25 * memory / max_connections,
Postgres,https://www.enterprisedb.com/postgres-tutorials/how-tune-postgresql-memory,maintenance_work_mem,,It’s recommended to set this value higher than work_mem; this can improve performance for vacuuming.,#maintenance_work_mem = 64MB,P > work_mem,
Postgres,https://www.enterprisedb.com/postgres-tutorials/how-tune-postgresql-memory,maintenance_work_mem,,Total RAM * 0.05,#maintenance_work_mem = 64MB,P = 0.05 * memory,
Postgres,https://www.enterprisedb.com/postgres-tutorials/how-tune-postgresql-memory,effective_cache_size,,Recommendations are to set Effective_cache_size at 50% of the machine’s total RAM.,,P = 0.5 * memory,
Postgres,https://www.revsys.com/writings/postgresql-performance.html,shared_buffers,,General wisdom says that this should be set to roughly 25% of available RAM on the system. ,shared_buffers = <num> ,P = 0.25 * memory,
Postgres,https://www.revsys.com/writings/postgresql-performance.html,shared_buffers,,Most people find that setting it larger than a third starts to degrade performance.,shared_buffers = <num> ,P <= 0.33 * memory,
Postgres,https://www.revsys.com/writings/postgresql-performance.html,effective_cache_size,,This should be set to the amount of memory allocated to shared_buffers plus the amount of OS cache available.,effective_cache_size = <num>,P = shared_buffers + Cache,
Postgres,https://www.revsys.com/writings/postgresql-performance.html,effective_cache_size,,Often this is more than 50% of the total system memory.,effective_cache_size = <num>,P > 0.5 * memory,
Postgres,https://www.revsys.com/writings/postgresql-performance.html,fsync,,"Having this on is safer, but can reduce write performance.",fsync = <boolean> ,P = off,
Postgres,https://www.revsys.com/writings/postgresql-performance.html,enable_seqscan,,You can also force PostgreSQL to favor index scans over sequential scans by setting the configuration parameter enable_seqscan to off.,,P = off,
Postgres,https://severalnines.com/database-blog/performance-cheat-sheet-postgresql,shared_buffers,,"If you have a dedicated database server with 1 GB or more of RAM, a reasonable initial value for shared_buffers is 25% of your system's memory.",shared_buffers,P = 0.25 * memory,Memory >= 1GB
Postgres,https://severalnines.com/database-blog/performance-cheat-sheet-postgresql,maintenance_work_mem,,"Since only one of these operations can be executed at the same time by a session, and an installation usually does not have many of them running simultaneously, it can be larger than the work_mem. ",maintenance_work_mem,P > work_mem,
Postgres,https://severalnines.com/database-blog/performance-cheat-sheet-postgresql,fsync,,"While disabling fsync generally improves performance, it can cause data loss in the event of a power failure or a system crash. ",,P = off,
Postgres,https://severalnines.com/database-blog/performance-cheat-sheet-postgresql,effective_cache_size,,A reasonable value would be 50% of the RAM.,effective_cache_size,P = 0.5 * memory,
Postgres,https://severalnines.com/database-blog/performance-cheat-sheet-postgresql,synchronous_commit,,"Therefore, deactivating synchronous_commit can be a useful alternative when performance is more important than the exact certainty about the durability of a transaction.",,P = off,
Postgres,https://severalnines.com/database-blog/performance-cheat-sheet-postgresql,log_statement,,"Using ""all"" can cause performance problems.","log_statement: You can choose between NONE, DDL, MOD, ALL. ",P != all,
MySQL,https://phoenixnap.com/kb/improve-mysql-performance-tuning-optimization,query_cache_size,,query_cache_size – Specifies the size of the cache of MySQL queries waiting to run. The recommendation is to start with small values around 10MB and then increase to no more than 100-200MB,,P = 10MB,
MySQL,https://phoenixnap.com/kb/improve-mysql-performance-tuning-optimization,query_cache_size,,query_cache_size – Specifies the size of the cache of MySQL queries waiting to run. The recommendation is to start with small values around 10MB and then increase to no more than 100-200MB,,P <= 200MB,
MySQL,https://www.percona.com/blog/2020/06/30/mysql-101-parameters-to-tune-for-mysql-performance/,innodb_buffer_pool_size,,"Generally, set to 50% – 70% of your total RAM as a starting point.",innodb_buffer_pool_size,0.5 * memory <= P <= 0.7 * memory,
MySQL,https://www.percona.com/blog/2020/06/30/mysql-101-parameters-to-tune-for-mysql-performance/,innodb_log_file_size,,This is generally set between 128M – 2G.,innodb_log_file_size,128M <= P <= 2G,
MySQL,https://www.percona.com/blog/2020/06/30/mysql-101-parameters-to-tune-for-mysql-performance/,innodb_flush_log_at_trx_commit,,"Setting to “0” or “2” will give more performance, but less durability.",innodb_flush_log_at_trx_commit,"P in {0, 1}",
MySQL,https://www.percona.com/blog/2020/06/30/mysql-101-parameters-to-tune-for-mysql-performance/,innodb_stats_on_metadata,,Setting this to “OFF” avoids unnecessary updating of InnoDB statistics and can greatly improve read speeds.,innodb_stats_on_metadata,P = off,
MySQL,https://www.percona.com/blog/2020/06/30/mysql-101-parameters-to-tune-for-mysql-performance/,innodb_buffer_pool_instances,,"A best practice is to set this to “8” unless the buffer pool size is < 1G, in which case set to “1”.",innodb_buffer_pool_instances,P = 8,Pool size >= 1G
MySQL,https://www.percona.com/blog/2020/06/30/mysql-101-parameters-to-tune-for-mysql-performance/,innodb_buffer_pool_instances,,"A best practice is to set this to “8” unless the buffer pool size is < 1G, in which case set to “1”.",innodb_buffer_pool_instances,P = 1,Pool size < 1G
MySQL,https://www.percona.com/blog/2020/06/30/mysql-101-parameters-to-tune-for-mysql-performance/,innodb_autoinc_lock_mode,,Setting this to “2” (interleaved mode) can remove the need for an auto-inc lock (at the table level) and can increase performance when using multi-row insert statements to insert values into a table with an auto increment primary key.,innodb_autoinc_lock_mode,P = 2,
MySQL,https://www.percona.com/blog/2020/04/01/tips-for-mysql-5-7-database-tuning-and-performance/,innodb_buffer_pool_size,,"Generally, set to 50% – 70% of your total RAM as a starting point.",innodb_buffer_pool_size,0.5 * memory <= P <= 0.7 * memory,
MySQL,https://www.percona.com/blog/2020/04/01/tips-for-mysql-5-7-database-tuning-and-performance/,innodb_log_file_size,,This is generally set between 128M – 2G.,innodb_log_file_size,128M <= P <= 2G,
MySQL,https://www.percona.com/blog/2020/04/01/tips-for-mysql-5-7-database-tuning-and-performance/,innodb_flush_log_at_trx_commit,,"Setting to “0” or “2” will give more performance, but less durability.",innodb_flush_log_at_trx_commit,"P in {0, 1}",
MySQL,https://www.percona.com/blog/2020/04/01/tips-for-mysql-5-7-database-tuning-and-performance/,innodb_flush_method,,Setting this to O_DIRECT will avoid the performance penalty from double buffering.,innodb_flush_method,P = O_DIRECT,
MySQL,https://www.percona.com/blog/2020/04/01/tips-for-mysql-5-7-database-tuning-and-performance/,innodb_stats_on_metadata,,Setting this to “OFF” avoids unnecessary updating of InnoDB statistics and can greatly improve read speeds.,innodb_stats_on_metadata,P = off,
MySQL,https://www.percona.com/blog/2020/04/01/tips-for-mysql-5-7-database-tuning-and-performance/,innodb_buffer_pool_instances,,"A best practice is to set this to “8” unless the buffer pool size is < 1G, in which case set to “1”.",innodb_buffer_pool_instances,P = 8,Pool size >= 1G
MySQL,https://www.percona.com/blog/2020/04/01/tips-for-mysql-5-7-database-tuning-and-performance/,innodb_buffer_pool_instances,,"A best practice is to set this to “8” unless the buffer pool size is < 1G, in which case set to “1”.",innodb_buffer_pool_instances,P = 1,Pool size < 1G
MySQL,https://www.percona.com/blog/2020/04/01/tips-for-mysql-5-7-database-tuning-and-performance/,innodb_buffer_pool_size,,"Generally, set to 50% – 70% of your total RAM as a starting point.",innodb_buffer_pool_size,0.5 * memory <= P,
MySQL,https://www.percona.com/blog/2020/04/01/tips-for-mysql-5-7-database-tuning-and-performance/,innodb_buffer_pool_size,,"Generally, set to 50% – 70% of your total RAM as a starting point.",innodb_buffer_pool_size,P <= 0.7 * memory,
MySQL,https://severalnines.com/database-blog/mysql-performance-cheat-sheet,join_buffer_size,,"In 64-bit platforms, Windows truncates values above 4GB to 4GB-1 with a warning.",join_buffer_size,P <= 4GB,"Bits = 64, OS = Windows"
MySQL,https://severalnines.com/database-blog/mysql-performance-cheat-sheet,table_open_cache_instances,,A value of 8 or 16 is recommended on systems that routinely use 16 or more cores.,table_open_cache_instances,"P in {8, 16}",Cores >= 16
MySQL,https://severalnines.com/database-blog/mysql-performance-cheat-sheet,table_definition_cache,,But take note that the default value is based on the following formula capped to a limit of 2000.,table_definition_cache,P <= 2000,
MySQL,https://severalnines.com/database-blog/mysql-performance-cheat-sheet,table_definition_cache,,The number of user-defined tables + 10% unless 50K+ tables,table_definition_cache,P = tables * 1.1,Tables <= 50000
MySQL,https://severalnines.com/database-blog/mysql-performance-cheat-sheet,max_allowed_packet,,"You might consider adjusting this if you have large BLOB rows that need to be pulled out (or read), otherwise you can leave this default settings with 8.0 but in older versions, default is 4 MiB so you might take care of that in case you encounter ER_NET_PACKET_TOO_LARGE error. ","max_allowed_packet ... However in MySQL 8.0 (at least on 8.0.3), the current default value is 64 MiB.",P = 64 MiB,
MySQL,https://severalnines.com/database-blog/mysql-performance-cheat-sheet,skip_name_resolve,,Consider turning this on if you do not need DNS resolution and take advantage of improving your MySQL performance when this DNS lookup is disabled.,skip_name_resolve,P = on,
MySQL,https://severalnines.com/database-blog/mysql-performance-cheat-sheet,thread_cache_size,,Using the formula stated in the documentation 8 + (max_connections / 100) is good enough.,thread_cache_size,P = * + (max_connections / 100),
MySQL,https://severalnines.com/database-blog/mysql-performance-cheat-sheet,query_cache_size,, This variable must be set to 0 along with query_cache_type = 0 as well to turn it off.,query_cache_size,P = 0,
MySQL,https://severalnines.com/database-blog/mysql-performance-cheat-sheet,innodb_buffer_pool_size,,"Since InnoDB relies heavily on the buffer pool, you would consider setting this value typically to 70%-80% of your server’s memory.",innodb_buffer_pool_size,0.7 * memory <= P <= 0.8 * memory,
MySQL,https://severalnines.com/database-blog/mysql-performance-cheat-sheet,innodb_log_file_size,,"Ideally, you can have 1-2GiB in production but of course you can adjust this.",innodb_log_file_size,1Gib <= P <= 2GiB,
MySQL,https://severalnines.com/database-blog/mysql-performance-cheat-sheet,innodb_flush_log_at_trx_commit,,The implication of 2 is optimal and improves performance if you can relax your ACID requirements and can afford to lose transactions for the last second or two in case of OS crashes.,innodb_flush_log_at_trx_commit,P = 2,
MySQL,https://severalnines.com/database-blog/mysql-performance-cheat-sheet,innodb_thread_concurrency,,A recommended value is 2 times the number of CPUs plus the number of disks.,innodb_thread_concurrency,P = 2 * cores + disks,
MySQL,https://severalnines.com/database-blog/mysql-performance-cheat-sheet,innodb_flush_method,,"If you are using a RAID with battery-backed cache, DIRECT_IO helps relieve I/O pressure.",innodb_flush_method,P = DIRECT_IO,RAID + battery
MySQL,https://severalnines.com/database-blog/mysql-performance-cheat-sheet,innodb_flush_method,,"If your disk is stored in SAN, O_DSYNC might be faster for a read-heavy workload with mostly SELECT statements.",innodb_flush_method,P = O_DSYNC,"SAN, read-heavy"
MySQL,https://severalnines.com/database-blog/mysql-performance-cheat-sheet,innodb_dedicated_server,,"However, as documentation states that this variable is desired to be enabled only if your MySQL is running on a dedicated server.",innodb_dedicated_server,P = on,Dedicated server
MySQL,https://severalnines.com/database-blog/mysql-performance-cheat-sheet,key_buffer_size,,I would suggest here to set perhaps 1% of RAM or 256 MiB at start if you have larger memory and dedicate the remaining memory for your OS cache and InnoDB buffer pool.,key_buffer_size,P = 0.01 * memory,
MySQL,https://severalnines.com/database-blog/mysql-performance-cheat-sheet,slow_query_log,,"Of course, this variable does not help boost your MySQL server.",slow_query_log,P = off,
MySQL,https://severalnines.com/database-blog/mysql-performance-cheat-sheet,sync_binlog,," Alternatively, you can set this to 0 if you want to disable disk synchronization and just rely on the OS to flush the binary log to disk from time to time.",sync_binlog,P = 0,
MySQL,https://severalnines.com/database-blog/mysql-performance-cheat-sheet,innodb_buffer_pool_dump_at_shutdown,,"To enable this feature, set both variables innodb_buffer_pool_dump_at_shutdown = ON and innodb_buffer_pool_load_at_startup = ON.",innodb_buffer_pool_dump_at_shutdown,P = on,
MySQL,https://severalnines.com/database-blog/mysql-performance-cheat-sheet,innodb_buffer_pool_load_at_startup,,"To enable this feature, set both variables innodb_buffer_pool_dump_at_shutdown = ON and innodb_buffer_pool_load_at_startup = ON.",innodb_buffer_pool_load_at_startup,P = on,
MySQL,https://severalnines.com/database-blog/mysql-performance-cheat-sheet,Swappiness,,Ensure that you have swappiness = 1.,swappiness,P = 1,
MySQL,https://severalnines.com/database-blog/mysql-performance-cheat-sheet,THP,,Another great thing to consider for your Memory management is considering turning off THP (Transparrent Huge Pages).,THP,P = off,
MySQL,https://haydenjames.io/mysql-performance-tuning-tips-scripts-tools/,join_buffer_size,,"For example, join_buffer_size set to 4GB when the total DB size is less than 1GB.","Meaning, before you contact a professional to tune MySQL use these tuning scripts so that at the very least you don’t have any so-called embarrassing config in your my.cnf file. ",P != 4GB,Dbsize < 1GB
H2,https://eclipse.github.io/kura/builtin/h2-database.html,LOG,,The transaction log can be disabled by appending the LOG=0 parameter to the DB URL. ,,P = 0,
H2,https://eclipse.github.io/kura/builtin/h2-database.html,data,,data=journal," In case of file-backed database (e.g. mostly or most persistent), the following database mount options can improve database reliability, reducing the database corruption probability at the expense of reduced performance and lifetime of the flash storage devices:",P = journal,
H2,https://eclipse.github.io/kura/builtin/h2-database.html,rootflags,,"If the database resides on the root filesystem, the data=journal option must be specified in the kernel command line as well, by appending rootflags=data=journal",,P = data=journal,Root file system
H2,https://eclipse.github.io/kura/builtin/h2-database.html,CACHE_SIZE,,"Plenty of cache, probably.",jdbc:h2:file:/work/h2/test;CACHE_SIZE=131072;,P <= 131072,
H2,http://www.h2database.com/html/performance.html,-server,,Switching from the default Client JVM to the Server JVM using the -server command-line option improves performance at the cost of a slight increase in start-up time.,,P = on,
H2,http://www.h2database.com/html/performance.html,LOG,,SET LOG 0 (disabling the transaction log),"To speed up large imports, consider using the following options temporarily:",P = 0,
H2,http://www.h2database.com/html/performance.html,LOCK_MODE,,SET LOCK_MODE 0,"To speed up large imports, consider using the following options temporarily:",P = 0,
H2,http://www.h2database.com/html/performance.html,UNDO_LOG,,SET UNDO_LOG 0,"To speed up large imports, consider using the following options temporarily:",P = 0,
H2,http://www.h2database.com/html/performance.html,CACHE_SIZE,,"Otherwise, I suggest to use the default settings (16 MB cache size) instead.","CACHE_SIZE="" + (1024 * 1024)",P = 16 MB,Memory <= 1 GB
H2,http://www.h2database.com/html/performance.html,CACHE_SIZE,,"If you set the cache size manually to 1024 * 1024, then H2 will use 1 GB heap memory. This setting should only be use if you have a lot more than 1 GB of physical memory available to the JVM (using java -Xmx2048m or similar).","CACHE_SIZE="" + (1024 * 1024)",P = 1024 * 1024,Memory > 1 GB
H2,http://iliachemodanov.ru/en/blog-en/21-databases/42-h2-performance-en,CACHE_SIZE,,"In my case, this was not enough - increasing the cache twice (up to 32 MB), I got the performance increment in the area of 62%, which is more than 2 times faster.",The cache size is set by the option CACHE_SIZE in kilobytes and defaults to 16384 (16MB).,P = 32 MB,
H2,http://iliachemodanov.ru/en/blog-en/21-databases/42-h2-performance-en,CACHE_TYPE,,"As recommended in the documentation, I tried all three algorithms - and it turned out that TQ is a bit faster - about 2-4%.",This can be done using the option CACHE_TYPE.,P = TQ,
H2,http://iliachemodanov.ru/en/blog-en/21-databases/42-h2-performance-en,MVCC,,"In my case, if you turn off this setting, the application stops working correctly because of the many queries exceeded the timeout.",MVCC setting,P != off,
H2,http://iliachemodanov.ru/en/blog-en/21-databases/42-h2-performance-en,EARLY_FILTER,,"After the setting was enabled, the speed of SELECT-queries increased by approximately 53%.",Setting EARLY_FILTER allows table implementations to apply filter conditions early on.,P = on,
H2,http://iliachemodanov.ru/en/blog-en/21-databases/42-h2-performance-en,PAGE_SIZE,,"As almost all databases, H2 divides memory into the pages. By default page size (option PAGE_SIZE) is equal to 2 kilobytes, which at first glance seems to be insufficient (for instance, in MySQL the default page size is 16 KB), but increasing the PAGE_SIZE value (I tried 4, 8, 16 and 32 KB) does not improve performance (and even makes it worse), as well as increases the size of the data files on disk.",,P <= 2 KB,
H2,http://iliachemodanov.ru/en/blog-en/21-databases/42-h2-performance-en,File system,,"For example, under the operating system Microsoft Windows 7 (x64) my tests showed that nio improves the database performance by 3-4% compared to the default implementation of the file system (RandomAccessFile).",H2 provides possibility to select file system implementation.,P = nio,OS = windows
H2,http://iliachemodanov.ru/en/blog-en/21-databases/42-h2-performance-en,split,,"My tests showed, that splitting all data on files with size of 16 MB (jdbc:h2:split:24:fileName) improved its speed under Microsoft Windows 7 (x64) by 4-7%, but under Oracle Solaris 11 (x64) on the contrary speed dropped to 5-6% compared to the default setting (when the database is stored in a single file).",,P = 24,OS = Microsoft Windows 7
H2,http://iliachemodanov.ru/en/blog-en/21-databases/42-h2-performance-en,split,,"My tests showed, that splitting all data on files with size of 16 MB (jdbc:h2:split:24:fileName) improved its speed under Microsoft Windows 7 (x64) by 4-7%, but under Oracle Solaris 11 (x64) on the contrary speed dropped to 5-6% compared to the default setting (when the database is stored in a single file).",,P = default,OS = Oracle Solaris 11
H2,http://iliachemodanov.ru/en/blog-en/21-databases/42-h2-performance-en,WRITE_DELAY,,"By default, its value is 500 ms - and it seems optimal (I tried 200, 1000 and 2000 ms, but the speed of database has not improved).",Option WRITE_DELAY defines a maximum delay in milliseconds between the end of a transaction and its recording to the disk.,P = 500 ms,