Database of Databases - H2
Database of Databases
Browse
Leaderboards
Recent
Revision List
Accounts
Login
H2
H2 ("Hypersonic 2") is an open-source lightweight relational database management system implemented in Java, supporting standard SQL API and JDBC API, as well as PostgreSQL ODBC driver. H2 is characterized by its fast performance and low memory requirement. H2 can be either embedded into a Java application or used as a database server. Both in-memory and disk-based database configurations are available. H2 also has strong security features.
http://www.h2database.com/html/main.html
History
The development of the H2 database engine started in May 2004, and first published in December 2005. The original developer, Thomas Mueller, also developed the Java database engine Hypersonic SQL (1998 - 2001), which is the origin of HSQLDB. The name H2 stands for Hypersonic 2, but it is built from scratch.
http://www.h2database.com/html/history.html
https://blog.jooq.org/2015/08/18/jooq-tuesdays-thomas-muller-unveils-how-hsqldb-evolved-into-the-popular-h2-database/
Checkpoints
Non-Blocking
Two forms of checkpoint creation is supported. "CHECKPOINT" command flushes the data to disk. "CHECKPOINT SYNC" command flushes the data to disk and forces all system buffers be written to the underlying device.
https://github.com/h2database/h2database
Compression
Bit Packing / Mostly Encoding
H2 supports two compression algorithms on objects: LZF and DEFLATE. The default one LZF has faster but lower compression performance, while DEFLATE has higher compression rate.
Concurrency Control
Multi-version Concurrency Control (MVCC)
The MVCC mode is enabled by default in version 1.4.x, with the default MVStore storage engine. It is disabled by default when using the default PageStore storage engine in version 1.3.x.
http://www.h2database.com/html/advanced.html#mvcc
Data Model
Relational
H2 is a traditional database management system built based on the relational model of data.
Foreign Keys
Supported
Indexes
B+Tree
Hash Table
AVL-Tree
H2 uses Hash Table and AVL-Tree indexes for in-memory tables, and B-Tree indexes for disk-based tables. Indexes are created automatically for primary key and unique constraints. Multi-dimensional indexes is supported in H2. An algorithm called "bit-interleaving", which maps the multi-dimensional key to a single dimensional value on a space-filling curve, is implemented to execute multi-dimension (spatial) range queries efficiently.
http://www.h2database.com/html/performance.html
http://www.h2database.com/html/features.html#multi_dimensional
Isolation Levels
Read Uncommitted
Read Committed
Serializable
H2 supports three isolation levels for all data manipulation language (DML) statements: Read Committed, Read Uncommitted and Serializable. The default level is "Read Committed" in most cases. Table level locking is used to make sure all connections only see consistent data. When MVCC is enabled (default setting in version 1.4.x when using the MVStore), instead of table level locking, rows are locked for update and "Read Committed" is used in all cases.
http://www.h2database.com/html/advanced.html#transaction_isolation
Joins
Index Nested Loop Join
Logging
Physical Logging
Query Compilation
Code Generation
H2 parses the prepared statement and performs local optimization.
Query Execution
Tuple-at-a-Time Model
Query Interface
SQL
H2 supports standard SQL API.
Storage Architecture
Hybrid
Storage Model
N-ary Storage Model (Row/Record)
Stored Procedures
Supported
In H2, Java functions can be used as stored procedures.
System Architecture
Shared-Disk
Embedded
In embedded mode, H2 database can be embedded into an application and runs inside the same JVM using JDBC driver. In the server mode, H2 database is opened remotely using the JDBC driver or ODBC API, and all data is transferred over TCP/IP.
http://www.h2database.com/html/features.html#connection_modes
Views
Virtual Views
H2 supports read only views and inline views. When using "instead of" triggers, views are updatable.
Revision #5
|
Updated 07/23/2019 11:33 p.m.
Derivative Systems
Lealone
People Also Viewed
Website
http://www.h2database.com/
Source Code
https://github.com/h2database/h2database
Tech Docs
http://www.h2database.com/html/quickstart.html
Developer
Thomas Mueller
Country of Origin
CH
Start Year
2004
http://www.h2database.com/html/history.html
Project Type
Open Source
Written in
Java
Supported languages
Java
Compatible With
HyperSQL, PostgreSQL
Operating Systems
All OS with Java VM
Licenses
Eclipse Public License, Mozilla Public License
Wikipedia
https://en.wikipedia.org/wiki/H2_(DBMS)
Revision #5
|
Updated 07/23/2019 11:33 p.m.
Derivative Systems
Lealone
People Also Viewed
Copyright Â© 2020
&bullet
Carnegie Mellon Database Group
Contact
Github
