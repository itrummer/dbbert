	sentence	context	pred_type	params	values
0	In most cases, you can get 95 percent of the server’s peak performance by setting about 10 options correctly	10 essential My SQL performance tuning tips | Info World	4	set()	['95', '10']
1	Remember the minimum default size is 40KB	| have_query_cache | YES	1	{'have_query_cache'}	['40KB']
2	You can also set values like 0,1 and 2 for setting up the connection status	mysql> SET SESSION query_cache_type = OFF;mysql> SET SESSION query_cache_type = OFF;mysql> SET SESSION query_cache_type = OFF;	2	{'query_cache_type'}	['0', '1', '2']
3	Memory Memory represents the total amount of RAM in your My SQL server	mysql> SET SESSION query_cache_type = OFF;mysql> SET SESSION query_cache_type = OFF;mysql> SET SESSION query_cache_type = OFF;	4	{'query_cache_type'}	[]
4	If you don’t have enough memory, or if the existing memory isn’t optimized, you can end up damaging your performance instead of improving it	mysql> SET SESSION query_cache_type = OFF;mysql> SET SESSION query_cache_type = OFF;mysql> SET SESSION query_cache_type = OFF;	4	{'query_cache_type'}	[]
5	Take note of the RAM required to run other system resources	innodb_buffer_pool_size – This setting allocates system memory as a data cache for your database	4	{'innodb_buffer_pool_size'}	[]
6	The following variables are largely dependent on your hardware:innodb_buffer_pool_size Generally, set to 50% – 70% of your total RAM as a starting point	The following variables are largely dependent on your hardware:innodb_buffer_pool_size Generally, set to 50% – 70% of your total RAM as a starting point	4	{'innodb_buffer_pool_size'}	['on', '50%', '70%']
7	Compare the RAM and number of free pages on your instance to the total buffer pool size	I would recommend starting with one of the most impactful variables – the innodb_buffer_pool_size	4	{'innodb_buffer_pool_size'}	['on']
8	As per the My SQL documentation, this option takes effect only when you set innodb_buffer_pool_size to a size of 1GB or more	As per the My SQL documentation, this option takes effect only when you set innodb_buffer_pool_size to a size of 1GB or more	4	{'innodb_buffer_pool_size'}	['1GB']
9	For best efficiency, specify a combination of innodb_buffer_pool_instances and innodb_buffer_pool_size so that each buffer pool instance is at least 1GB	For best efficiency, specify a combination of innodb_buffer_pool_instances and innodb_buffer_pool_size so that each buffer pool instance is at least 1GB	4	{'innodb_buffer_pool_size', 'innodb_buffer_pool_instances'}	['1GB']
10	For example, join_buffer_size set to 4GB when the total DB size is less than 1GB	For example, join_buffer_size set to 4GB when the total DB size is less than 1GB	4	{'join_buffer_size'}	['4GB', '1GB']
11	The following variables are largely dependent on your hardware:innodb_buffer_pool_size Generally, set to 50% – 70% of your total RAM as a starting point	The following variables are largely dependent on your hardware:innodb_buffer_pool_size Generally, set to 50% – 70% of your total RAM as a starting point	4	{'innodb_buffer_pool_size'}	['on', '50%', '70%']
12	Compare the RAM and number of free pages on your instance to the total buffer pool size	I would recommend starting with one of the most impactful variables – the innodb_buffer_pool_size	4	{'innodb_buffer_pool_size'}	['on']
13	In 64-bit platforms, Windows truncates values above 4GB to 4GB-1 with a warning	join_buffer_size	1	{'join_buffer_size'}	['64-bit', '4GB', '4GB-1']
14	The largest possible packet that can be transmitted to or from a My SQL 8.0 server or client is 1GB	You might consider adjusting this if you have large BLOB rows that need to be pulled out (or read), otherwise you can leave this default settings with 8.0 but in older versions, default is 4 Mi B so you might take care of that in case you encounter ER_NET_PACKET_TOO_LARGE error	4	{'ER_NET_PACKET_TOO_LARGE'}	['8.0', '1GB']
15	Since Inno DB relies heavily on the buffer pool, you would consider setting this value typically to 70%-80% of your server’s memory	innodb_buffer_pool_size	4	{'innodb_buffer_pool_size'}	['on', '70%-80%']
16	The combined size of log files (innodb_log_file_size * innodb_log_files_in_group) cannot exceed a maximum value that is slightly less than 512GB	The combined size of log files (innodb_log_file_size * innodb_log_files_in_group) cannot exceed a maximum value that is slightly less than 512GB	4	{'innodb_log_file_size', 'innodb_log_files_in_group'}	['512GB']
17	I would suggest here to set perhaps 1% of RAM or 256 Mi B at start if you have larger memory and dedicate the remaining memory for your OS cache and Inno DB buffer pool	Inno DB is the default storage engine now of My SQL, the default for key_buffer_size can probably be decreased unless you are using My ISAM productively as part of your application (but who uses My ISAM in production now?)	4	{'key_buffer_size'}	['1%', '256']
18	Value can be set to 0 or OFF to disable logging	slow_query_log	4	{'slow_query_log'}	['0']
