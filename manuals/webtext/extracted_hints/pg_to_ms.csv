	sentence	context	pred_type	params	values
0	If you have a system with 1GB or more of RAM, a reasonable starting value for shared_buffers is 1/4 of the memory in your system	If you have a system with 1GB or more of RAM, a reasonable starting value for shared_buffers is 1/4 of the memory in your system	4	{'shared_buffers'}	['1GB', '1/4']
1	If you have less RAM you'll have to account more carefully for how much RAM the OS is taking up; closer to 15% is more typical there	If you have a system with 1GB or more of RAM, a reasonable starting value for shared_buffers is 1/4 of the memory in your system	4	{'shared_buffers'}	['15%']
2	Be aware that if your system or Postgre SQL build is 32-bit, it might not be practical to set shared_buffers above 2 ~ 2.5GB	Be aware that if your system or Postgre SQL build is 32-bit, it might not be practical to set shared_buffers above 2 ~ 2.5GB	4	{'shared_buffers'}	['32-bit', '2', '2.5GB']
3	The maximum value for the parameter was also increased from 1000 to 10,000 in 8.4	The starting default_statistics_target value was raised from 10 to 100 in Postgre SQL 8.4	4	{'default_statistics_target'}	['1000', '10', '000', '8.4']
4	wal_buffers defaults to 1/32 of the size of shared_buffers, with an upper limit of 16MB (reached when shared_buffers=512MB)	wal_buffers defaults to 1/32 of the size of shared_buffers, with an upper limit of 16MB (reached when shared_buffers=512MB)	4	{'shared_buffers=512MB', 'shared_buffers', 'wal_buffers'}	['1/32', '16MB']
5	Benchmarking generally suggests that just increasing to 1MB is enough for some large systems, and given the amount of RAM in modern servers allocating a full WAL segment (16MB, the useful upper-limit here) is reasonable	On Postgre SQL 9.0 and earlier, increasing wal_buffers from its tiny default of a small number of kilobytes is helpful for write-heavy systems	4	{'wal_buffers'}	['1MB', '16MB']
6	The value should be set to 15% to 25% of the machine’s total RAM	#shared_buffers = 128MB	0	{'#shared_buffers'}	['15%', '25%']
7	For example: if your machine’s RAM size is 32 GB, then the recommended value for shared_buffers is 8 GB	For example: if your machine’s RAM size is 32 GB, then the recommended value for shared_buffers is 8 GB	4	{'shared_buffers'}	['32', '8']
8	Recommendations are to set Effective_cache_size at 50% of the machine’s total RAM	Recommendations are to set Effective_cache_size at 50% of the machine’s total RAM	0	{'Effective_cache_size'}	['50%']
9	The recommended value is 25% of your total machine RAM	The default value of shared_buffer is set very low and you will not get much benefit from that	4	{'shared_buffer'}	['25%']
10	For testing purposes, let’s increase this to 256MB and see if there is any impact on cost	For the above query, we have a work_mem of only 2MB	4	{'work_mem'}	['256MB', 'on']
11	If your application is designed such that performance is more important than the reliability, then turn off synchronous_commit	If your application is designed such that performance is more important than the reliability, then turn off synchronous_commit	4	{'synchronous_commit'}	['off']
12	If you have a dedicated database server with 1 GB or more of RAM, a reasonable initial value for shared_buffers is 25% of your system's memory	If you have a dedicated database server with 1 GB or more of RAM, a reasonable initial value for shared_buffers is 25% of your system's memory	4	{'shared_buffers'}	['1', '25%']
13	The default setting is about 3% of shared_buffers, not less than 64KB or more than the size of a WAL segment (usually 16MB)	The default setting is about 3% of shared_buffers, not less than 64KB or more than the size of a WAL segment (usually 16MB)	4	{'shared_buffers'}	['3%', '64KB', '16MB']
14	A reasonable value would be 50% of the RAM	effective_cache_size	0	{'effective_cache_size'}	['50%']
15	It is not recommended to use RAID5 since the performance of this type of RAID for databases is not good	log_statement: You can choose between NONE, DDL, MOD, ALL	4	{'log_statement'}	[]
16	set to roughly 25% of available RAM on the system	shared_buffers = <num> — Editing this option is the simplest	0	{'shared_buffers'}	['25%', 'on']
