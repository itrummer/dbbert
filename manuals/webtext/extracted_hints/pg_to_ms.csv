	sentence	context	pred_type	params	values
0	In most cases, you can get 95 percent of the server’s peak performance by setting about 10 options correctly	10 essential My SQL performance tuning tips | Info World	4	set()	['95', '10']
1	Remember the minimum default size is 40KB	| have_query_cache | YES	1	{'have_query_cache'}	['40KB']
2	The maximum size can be 32MB	| have_query_cache | YES	1	{'have_query_cache'}	['32MB']
3	You can also set values like 0,1 and 2 for setting up the connection status	mysql> SET SESSION query_cache_type = OFF;mysql> SET SESSION query_cache_type = OFF;mysql> SET SESSION query_cache_type = OFF;	4	{'query_cache_type'}	['0', '1', '2']
4	The recommendation is to start with small values around 10MB and then increase to no more than 100-200MB	query_cache_size – Specifies the size of the cache of My SQL queries waiting to run	1	{'query_cache_size'}	['10MB', '100-200MB']
5	A 5400-rpm HDD will have a much lower capacity than a high-end SSD or Intel Optane	innodb_io_capacity – This variable sets the rate for input/output from your storage device	1	{'innodb_io_capacity'}	['5400-rpm']
6	The following variables are largely dependent on your hardware:innodb_buffer_pool_size Generally, set to 50% – 70% of your total RAM as a starting point	The following variables are largely dependent on your hardware:innodb_buffer_pool_size Generally, set to 50% – 70% of your total RAM as a starting point	4	{'innodb_buffer_pool_size'}	['on', '50%', '70%']
7	It does not need to be set any larger than the total database size	The following variables are largely dependent on your hardware:innodb_buffer_pool_size Generally, set to 50% – 70% of your total RAM as a starting point	2	{'innodb_buffer_pool_size'}	[]
8	Should be large enough to hold at most an hour or so of logs	innodb_log_file_size This is generally set between 128M – 2G	1	{'innodb_log_file_size'}	[]
9	Setting to “0” or “2” will give more performance, but less durability	innodb_flush_log_at_trx_commit Setting to “1” (default in 5.7) gives the most durability	3	{'innodb_flush_log_at_trx_commit'}	['0”', '2”']
10	innodb_flush_method Setting this to O_DIRECT will avoid a performance penalty from double buffering	innodb_flush_method Setting this to O_DIRECT will avoid a performance penalty from double buffering	4	{'innodb_flush_method', 'O_DIRECT'}	[]
11	innodb_buffer_pool_instances A best practice is to set this to “8” unless the buffer pool size is < 1G, in which case set to “1”	innodb_buffer_pool_instances A best practice is to set this to “8” unless the buffer pool size is < 1G, in which case set to “1”	4	{'innodb_buffer_pool_instances'}	['8”', '1G', '1”']
12	Why innodb_buffer_pool_instances has a best practice to set it to “8” July 1, 2020 at 12:04 pm	Why innodb_buffer_pool_instances has a best practice to set it to “8” July 1, 2020 at 12:04 pm	4	{'innodb_buffer_pool_instances'}	['8”', '1', '2020', '12', '04']
13	As per the My SQL documentation, this option takes effect only when you set innodb_buffer_pool_size to a size of 1GB or more	As per the My SQL documentation, this option takes effect only when you set innodb_buffer_pool_size to a size of 1GB or more	4	{'innodb_buffer_pool_size'}	['1GB']
14	For example, join_buffer_size set to 4GB when the total DB size is less than 1GB	For example, join_buffer_size set to 4GB when the total DB size is less than 1GB	4	{'join_buffer_size'}	['4GB', '1GB']
15	The following variables are largely dependent on your hardware:innodb_buffer_pool_size Generally, set to 50% – 70% of your total RAM as a starting point	The following variables are largely dependent on your hardware:innodb_buffer_pool_size Generally, set to 50% – 70% of your total RAM as a starting point	4	{'innodb_buffer_pool_size'}	['on', '50%', '70%']
16	It does not need to be set any larger than the total database size	The following variables are largely dependent on your hardware:innodb_buffer_pool_size Generally, set to 50% – 70% of your total RAM as a starting point	2	{'innodb_buffer_pool_size'}	[]
17	Setting to “0” or “2” will give more performance, but less durability	innodb_flush_log_at_trx_commit Setting to “1” (default in 5.7) gives the most durability	3	{'innodb_flush_log_at_trx_commit'}	['0”', '2”']
18	innodb_flush_method Setting this to O_DIRECT will avoid the performance penalty from double buffering	innodb_flush_method Setting this to O_DIRECT will avoid the performance penalty from double buffering	4	{'innodb_flush_method', 'O_DIRECT'}	[]
19	innodb_buffer_pool_instances A best practice is to set this to “8” unless the buffer pool size is < 1G, in which case set to “1”	innodb_buffer_pool_instances A best practice is to set this to “8” unless the buffer pool size is < 1G, in which case set to “1”	4	{'innodb_buffer_pool_instances'}	['8”', '1G', '1”']
20	If it is set to a value that is not a multiple of 4KB, its value will be rounded down to the nearest multiple of 4KB	The read_buffer_size system variable determines the buffer size	4	{'read_buffer_size'}	['4KB', '4KB']
21	In 64-bit platforms, Windows truncates values above 4GB to 4GB-1 with a warning	join_buffer_size	1	{'join_buffer_size'}	['64-bit', '4GB', '4GB-1']
22	A value of 8 or 16 is recommended on systems that routinely use 16 or more cores	The open tables cache can be partitioned into several smaller cache instances of size table_open_cache / table_open_cache_instances	1	{'table_open_cache', 'table_open_cache_instances'}	['8', '16', 'on', '16']
23	Since Inno DB relies heavily on the buffer pool, you would consider setting this value typically to 70%-80% of your server’s memory	innodb_buffer_pool_size	4	{'innodb_buffer_pool_size'}	['on', '70%-80%']
24	I would suggest here to set perhaps 1% of RAM or 256 Mi B at start if you have larger memory and dedicate the remaining memory for your OS cache and Inno DB buffer pool	Inno DB is the default storage engine now of My SQL, the default for key_buffer_size can probably be decreased unless you are using My ISAM productively as part of your application (but who uses My ISAM in production now?)	4	{'key_buffer_size'}	['1%', '256']
25	Value can be set to 0 or OFF to disable logging	slow_query_log	4	{'slow_query_log'}	['0']
26	Alternatively, you can set this to 0 if you want to disable disk synchronization and just rely on the OS to flush the binary log to disk from time to time	sync_binlog	4	{'sync_binlog'}	['0', 'on']
27	Or setting it to a value of 1 as follows	echo performance | sudo tee /sys/devices/system/cpu/cpu[0-9]*/cpufreq/scaling_governor	4	{'/sys/devices/system/cpu/cpu[0-9]*/cpufreq/scaling_governor'}	['1']
