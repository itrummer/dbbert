	sentence	context	pred_type	params	values
0	In most cases, you can get 95 percent of the server’s peak performance by setting about 10 options correctly	10 essential My SQL performance tuning tips | Info World	4	set()	['95', '10']
1	Plus, the ratio of executions to average wait time is vastly improved	table_schema = 'csu' AND table_name = 'registration'AND referenced_column_name IS NOT NULL;	4	{'table_schema', 'table_name', 'referenced_column_name'}	[]
2	The recommendation is to start with small values around 10MB and then increase to no more than 100-200MB	query_cache_size – Specifies the size of the cache of My SQL queries waiting to run	1	{'query_cache_size'}	['10MB', '100-200MB']
3	io uses My SQL to reduce wasted advertising dollars spent on fraudulent traffic by as much as 90%	innodb_io_capacity – This variable sets the rate for input/output from your storage device	4	{'innodb_io_capacity'}	['on', '90%']
4	The following variables are largely dependent on your hardware:innodb_buffer_pool_size Generally, set to 50% – 70% of your total RAM as a starting point	The following variables are largely dependent on your hardware:innodb_buffer_pool_size Generally, set to 50% – 70% of your total RAM as a starting point	4	{'innodb_buffer_pool_size'}	['on', '50%', '70%']
5	PMM can offer additional insight, as if you are using more than 50% of your log space, you may benefit from a log file size increase	innodb_log_file_size This is generally set between 128M – 2G	4	{'innodb_log_file_size'}	['50%']
6	Setting to “0” or “2” will give more performance, but less durability	innodb_flush_log_at_trx_commit Setting to “1” (default in 5.7) gives the most durability	4	{'innodb_flush_log_at_trx_commit'}	['0', '2']
7	innodb_buffer_pool_instances A best practice is to set this to “8” unless the buffer pool size is < 1G, in which case set to “1”	innodb_buffer_pool_instances A best practice is to set this to “8” unless the buffer pool size is < 1G, in which case set to “1”	4	{'innodb_buffer_pool_instances'}	['8', '1G', '1']
8	Most query workloads are not 100% PIO, so actual benefits likely much lower	innodb_buffer_pool_instances (change from 8 to 32) innodb_read_io_threads (change from 4 to 16)Under a 100% physical I/O workload this resulted in a 4x speedup	1	{'innodb_read_io_threads', 'innodb_buffer_pool_instances'}	['100%']
9	For example, join_buffer_size set to 4GB when the total DB size is less than 1GB	For example, join_buffer_size set to 4GB when the total DB size is less than 1GB	4	{'join_buffer_size'}	['4GB', '1GB']
10	The following variables are largely dependent on your hardware:innodb_buffer_pool_size Generally, set to 50% – 70% of your total RAM as a starting point	The following variables are largely dependent on your hardware:innodb_buffer_pool_size Generally, set to 50% – 70% of your total RAM as a starting point	4	{'innodb_buffer_pool_size'}	['on', '50%', '70%']
11	Setting to “0” or “2” will give more performance, but less durability	innodb_flush_log_at_trx_commit Setting to “1” (default in 5.7) gives the most durability	4	{'innodb_flush_log_at_trx_commit'}	['0', '2']
12	innodb_buffer_pool_instances A best practice is to set this to “8” unless the buffer pool size is < 1G, in which case set to “1”	innodb_buffer_pool_instances A best practice is to set this to “8” unless the buffer pool size is < 1G, in which case set to “1”	4	{'innodb_buffer_pool_instances'}	['8', '1G', '1']
13	If it is set to a value that is not a multiple of 4KB, its value will be rounded down to the nearest multiple of 4KB	The read_buffer_size system variable determines the buffer size	4	{'read_buffer_size'}	['4KB', '4KB']
14	In 64-bit platforms, Windows truncates values above 4GB to 4GB-1 with a warning	join_buffer_size	1	{'join_buffer_size'}	['64-bit', '4GB', '4GB-1']
15	However in My SQL 8.0 (at least on 8.0.3), the current default value is 64 Mi B	max_allowed_packet	1	{'max_allowed_packet'}	['8.0', 'on', '8.0.3)', '64']
16	Since Inno DB relies heavily on the buffer pool, you would consider setting this value typically to 70%-80% of your server’s memory	innodb_buffer_pool_size	2	{'innodb_buffer_pool_size'}	['on', '70%-80%']
17	However, I have seen servers with 3% dirty buffers and they are hitting their max checkpoint age	innodb_stats_on_metadata	4	{'innodb_stats_on_metadata'}	['3%']
18	I would suggest here to set perhaps 1% of RAM or 256 Mi B at start if you have larger memory and dedicate the remaining memory for your OS cache and Inno DB buffer pool	Inno DB is the default storage engine now of My SQL, the default for key_buffer_size can probably be decreased unless you are using My ISAM productively as part of your application (but who uses My ISAM in production now?)	4	{'key_buffer_size'}	['1%', '256']
