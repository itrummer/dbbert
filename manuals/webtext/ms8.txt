Tips for MySQL 5.7 Database Tuning and Performance - Percona Database Performance Blog
Percona LiveAbout UsContact Us
Services
Support
MySQL Support
MongoDB Support
MariaDB Support
PostgreSQL Support
DBaaS Support
High Availability Support
Flexible Pricing
Support Tiers
Technical Account Managers
Managed Services
Percona Managed Database Services
Percona Advanced Managed Database Service
Consulting
Percona Cloud Cover
Percona Open Source Advance
Percona and Microsoft Azure Partnership
Policies
Training
Products
MySQL Database Software
Percona Distribution for MySQL
Percona Server for MySQL
Percona XtraDB Cluster
Percona XtraBackup
MongoDB Database Software
Percona Distribution for MongoDB
Percona Server for MongoDB
Percona Backup for MongoDB
PostgreSQL Database Software
Percona Monitoring and Management
Percona Kubernetes Operators
Open Source Database Tools
Percona Toolkit
Percona DBaaS Command Line Tool
Solutions
Eliminate Vendor Lock-In
Embrace the Cloud
Optimize Database Performance
Reduce Costs and Complexity
Resources
Calculators
Solution Briefs
White Papers
Webinars
Datasheets
Case Studies
Ebooks
Videos
Technical Presentations
About
About Percona
Contact Us
Customers
Careers
In The News
Percona Live
Events
Survey
Community
Forums
Community Blog
PMM Community Contributions
Tips for MySQL 5.7 Database Tuning and Performance
Back to the Homepage 01 Apr 2020 Brian Sumpter2020-04-01T12:30:51-04:00 By Brian Sumpter
Insight for DBAs, Monitoring, MySQL, Percona Software
insight for DBAs, Monitoring, MySQL, Percona Software
0 CommentsWhile there is no magic bullet for MySQL 5.7 database tuning, there are a few areas that can be focused on upfront that can dramatically improve the performance of your MySQL installation. While much information has been published on this topic over the years, I wanted to break down some of the more critical settings that anyone can implement – with no guesswork required.Depending on the version of MySQL you are running, some of the default values used in this post may differ from your install, but the premise is still largely the same. We will focus on MySQL 5.7 for the purposes of this article.Initial MySQL performance tuning can be broken down to the following categories:Tuning for your hardwareTuning for best performance/best practicesTuning for your workloadMySQL 5.7 Database TuningTuning For Your HardwareDepending on the hardware you have installed MySQL on, some variables need to be set based on the machine (or VM) specifications. The following variables are largely dependent on your hardware:innodb_buffer_pool_sizeGenerally, set to 50% – 70% of your total RAM as a starting point.It does not need to be set any larger than the total database size.innodb_log_file_sizeThis is generally set between 128M – 2G.It does not need to be any larger than the buffer pool.innodb_flush_log_at_trx_commitSetting to “1” (default in 5.7) gives the most durability.Setting to “0” or “2” will give more performance, but less durability.innodb_flush_methodSetting this to O_DIRECT will avoid the performance penalty from double buffering.Tuning For Best Performance / Best Practicesinnodb_file_per_tableSetting this to “ON” will generate an independent InnoDB table space for every table in the database.innodb_stats_on_metadataSetting this to “OFF” avoids unnecessary updating of InnoDB statistics and can greatly improve read speeds.innodb_buffer_pool_instancesA best practice is to set this to “8” unless the buffer pool size is < 1G, in which case set to “1”.query_cache_type & query_cache_sizeSetting both of these to “0” will entirely disable the query cache.Tuning For Your WorkloadTo tune further, more information will be required. The best way to gather this information is to install a MySQL monitoring/graphing tool like Percona Monitoring and Management (PMM). Once you have a tool installed, we can dive into the individual metrics and start customizing based on the data.I would recommend starting with one of the most impactful variables – the innodb_buffer_pool_size.  Compare the RAM and number of free pages on your instance to the total buffer pool size. Based on these metrics, you can determine if you need to increase or decrease your overall buffer pool size setting.Next, take a look at your metrics for the InnoDB Log File usage. The rule of thumb is that your log files should hold approximately one hour of data. If you see that the data written to the log files hourly exceeds the total size of the log files, you would want to increase the innodb_log_file_size variable and restart MySQL. You could also verify with “SHOW ENGINE INNODB STATUS;” via the MySQL CLI to assist in calculating a good InnoDB log file size.In SummaryWhile this is by no means a comprehensive article on MySQL 5.7 database tuning, the suggestions above should clear some of the low hanging fruit and get your system closer to an ideal setup. As with all database tuning, your process should be an ongoing one based on current information.Examine the settings proposed above, and implement if they make sense for your environment/workload.Install a good monitoring tool to give insight into the database (Percona Monitoring and Management is our suggestion).Stay current on your monitoring graphs to determine other areas where you may need to tune.Related
AuthorBrian SumpterShare this postFacebookTwitterLinkedInEmailLeave a Reply Cancel reply
How Can We Help? Percona's experts can maximize your application performance with our open source database support, managed services or consulting.Contact usSubscribeWant to get weekly updates listing the latest blog posts? Subscribe now and we'll send you an update every Friday at 1pm ET.Subscribe to our blog CategoriesMySQL(3355)Insight for DBAs(1528)Percona Software(1479)Percona Events(870)MongoDB(549)Insight for Developers(472)Benchmarks(340)Percona Live(332)Webinars(287)Cloud(276)PostgreSQL(176)Monitoring(164)MariaDB(157)Percona Services(138)ProxySQL(127)Security(125)Hardware and Storage(105)Storage Engine(52)Database Trends(46)Percona Announcements(10)  Percona Blog RSS Feed
Upcoming WebinarsThe Open Source Alternative to Paying for MongoDBWhy PostgreSQL Is Becoming A Migration Target For EnterpriseHow To Measure Linux Performance WrongConverting MongoDB to Percona Server for MongoDBMoving MongoDB to the Cloud: Strategies and Points To ConsiderAll Webinars
»ServicesSupportManaged ServicesConsultingTrainingProductsMySQL SoftwareMongoDB SoftwarePostgreSQL DistributionKubernetesMonitoring & ManagementResourcesSolution BriefsWhite PapersWebinarsCase StudiesDatasheetsMoreBlogCommunity BlogTechnical Forum HelpAboutCustomersNewsroomAboutCareers Contact UsSales & General Inquiries (888) 316-9775 (USA) (208) 473-2904 (USA) +44 203 608 6727 (UK) 0-808-169-6490 (UK) 0-800-724-4569 (GER)MySQL, InnoDB, MariaDB and MongoDB are trademarks of their respective owners. Proudly running Percona Server for MySQL
Terms of Use |
Privacy |
Copyright |
LegalCopyright © 2006-2020 Percona LLC.
